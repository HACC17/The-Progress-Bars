<div id="line-chart"></div> 
<div class="select-filters">
	<button id="line-type" class="btn" type="button"><span>Grant Type</span></button>
	<button id="line-priority" class="btn not-chosen" type="button"><span>Strategic Priority</span></button>
	<button id="line-results" class="btn not-chosen" type="button"><span>Strategic Results</span></button>
</div>

<script>
var lineChart = Highcharts.chart('line-chart', {
    chart: {
        type: 'area'
    },
    title: {
        text: '<a class="highcharts-title expand-chart">Historic Grant Spending by Grant Type  <svg class="open-up" style="width:18px;height:18px" viewBox="0 0 24 24"><path fill="#444" d="M10,21V19H6.41L10.91,14.5L9.5,13.09L5,17.59V14H3V21H10M14.5,10.91L19,6.41V10H21V3H14V5H17.59L13.09,9.5L14.5,10.91Z" /></svg><svg class="close-up" style="display:none;width:18px;height:18px" viewBox="0 0 24 24"><path fill="#444" d="M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z" /></svg></a>',
		useHTML: true
    },

	exporting: { buttons: { contextButton: {
		menuItems: [{
		textKey: 'downloadPNG',
		onclick: function () {
			this.exportChart();
		}
	}, {
		textKey: 'downloadCSV',
		onclick: function () {
			this.downloadCSV();
		}
	}]
}}},
    
    xAxis: {
        categories: <%= raw @uYears %>,
        tickmarkPlacement: 'on',
        title: {
            enabled: false
        }
    },
    yAxis: {
        title: {
            text: 'Funding'
        },
        labels: {
            formatter: function () {
                if(this.value == 0){ 
				return '$' + this.value / 1000000;
				}
				else {
				return '$' + this.value / 1000000 + ' million';
				}
            }
        }
    },
      tooltip: {
	  split: true,
        pointFormat: '{series.name}: <b>${point.y:,.0f}<br/>'
    },
    plotOptions: {
        area: {
            stacking: 'normal',
            lineColor: '#666666',
            lineWidth: 1,
            marker: {
                lineWidth: 1,
                lineColor: '#666666'
            }
        },
		series: {
            dataLabels: {
                enabled: false
            }
        }
    },
//	   Construct the array of values in the series through tapping into the ruby database
//	   upon first rendering the page. The typical static series would look something like:
//	   series: [ 
//			{
//				name: 'string',
//				data: [12,13,14] 
//			}, 
//			{
//				name: 'another string',
//				data: [34,35,36]
//			}
//		]
//		
//		The last iteration of the loop is cut off because the final set in the series must
//		end without a comma.

    series: [
	<% index = 0
	while index < @uType.length - 1%>
		{
			name: '<%= raw @uType[index] %>',
			data: <%= raw @amountPerYearByType[index] %>
		},
		<% index = index + 1 %>
	<% end %>
	{
		name: '<%= raw @uType[index] %>',
		data: <%= raw @amountPerYearByType[index] %>
	}
	]
});

$('#line-priority').click(function () {
	$( this ).removeClass( "not-chosen" );
	$("#line-type").addClass( "not-chosen" );
	$("#line-results").addClass( "not-chosen" );
	lineChart.update({
       title: {
        text: 'Historic Grant Spending by Strategic Priority'
		}
    });
	
	var newSeries = [
	<% index = 0
	while index < @uPriorities.length - 1%>
		{
			name: '<%= raw @uPriorities[index] %>',
			data: <%= raw @amountPerYearByPriority[index] %>
	    },
		<% index = index + 1 %>
	<% end %>
	{
        name: '<%= raw @uPriorities[index] %>',
        data: <%= raw @amountPerYearByPriority[index] %>
    }
	]
	
	for (var i = lineChart.series.length-1; i>=0; i--) {
            lineChart.series[i].remove();
        }
        for (var y = 0; y < newSeries.length; y++) {
            lineChart.addSeries(newSeries[y]);
        }
		
	lineChart.redraw();
	
});


/*The following all update the chart with new data */
$('#line-results').click(function () {
	$( this ).removeClass( "not-chosen" );
	$("#line-priority").addClass( "not-chosen" );
	$("#line-type").addClass( "not-chosen" );
	lineChart.update({
       title: {
        text: 'Historic Grant Spending by Strategic Results'
		}
    });
	
	var newSeries = [
	<% index = 0
	while index < @uResults.length - 1%>
		{
			name: '<%= raw @uResults[index] %>',
			data: <%= raw @amountPerYearByResults[index] %>
	    },
		<% index = index + 1 %>
	<% end %>
	{
        name: '<%= raw @uResults[index] %>',
        data: <%= raw @amountPerYearByResults[index] %>
    }
	]
	
	for (var i = lineChart.series.length-1; i>=0; i--) {
            lineChart.series[i].remove();
        }
        for (var y = 0; y < newSeries.length; y++) {
            lineChart.addSeries(newSeries[y]);
        }
		
	lineChart.redraw();
	
});

$('#line-type').click(function () {
	$( this ).removeClass( "not-chosen" );
	$("#line-priority").addClass( "not-chosen" );
	$("#line-results").addClass( "not-chosen" );
	lineChart.update({
	   title: {
		text: 'Historic Grant Spending by Grant Type'
		}
	});
	
	var newSeries = [
	<% index = 0
	while index < @uType.length - 1%>
		{
			name: '<%= raw @uType[index] %>',
			data: <%= raw @amountPerYearByType[index] %>
		},
		<% index = index + 1 %>
	<% end %>
	{
		name: '<%= raw @uType[index] %>',
		data: <%= raw @amountPerYearByType[index] %>
	}
	]
	
	for (var i = lineChart.series.length-1; i>=0; i--) {
			lineChart.series[i].remove();
		}
		for (var y = 0; y < newSeries.length; y++) {
			lineChart.addSeries(newSeries[y]);
		}
		
	lineChart.redraw();
	
});
</script>